// Mocks generated by Mockito 5.4.4 from annotations
// in movie_tv_level_maximum/test/presentation/pages/tv_show/tv_show_detail_page_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:bloc/bloc.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_tv_show_detail.dart'
    as _i2;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_tv_show_recommendations.dart'
    as _i4;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_watchlist_tv_show_status.dart'
    as _i8;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/remove_watchlist_tv_show.dart'
    as _i7;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/save_watchlist_tv_show.dart'
    as _i6;
import 'package:movie_tv_level_maximum/presentation/bloc/tv_show/crud/tv_show_crud_bloc.dart'
    as _i9;
import 'package:movie_tv_level_maximum/presentation/bloc/tv_show/detail/tv_show_detail_bloc.dart'
    as _i3;
import 'package:movie_tv_level_maximum/presentation/bloc/tv_show/recommendation/tv_show_recommendation_bloc.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvShowDetail_0 extends _i1.SmartFake
    implements _i2.GetTvShowDetail {
  _FakeGetTvShowDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvShowDetailState_1 extends _i1.SmartFake
    implements _i3.TvShowDetailState {
  _FakeTvShowDetailState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvShowRecommendations_2 extends _i1.SmartFake
    implements _i4.GetTvShowRecommendations {
  _FakeGetTvShowRecommendations_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvShowRecommendationState_3 extends _i1.SmartFake
    implements _i5.TvShowRecommendationState {
  _FakeTvShowRecommendationState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvShow_4 extends _i1.SmartFake
    implements _i6.SaveWatchlistTvShow {
  _FakeSaveWatchlistTvShow_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvShow_5 extends _i1.SmartFake
    implements _i7.RemoveWatchlistTvShow {
  _FakeRemoveWatchlistTvShow_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListTvShowStatus_6 extends _i1.SmartFake
    implements _i8.GetWatchListTvShowStatus {
  _FakeGetWatchListTvShowStatus_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvShowCrudState_7 extends _i1.SmartFake
    implements _i9.TvShowCrudState {
  _FakeTvShowCrudState_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvShowDetailBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDetailBloc extends _i1.Mock implements _i3.TvShowDetailBloc {
  MockTvShowDetailBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvShowDetail get getTvShowDetail => (super.noSuchMethod(
        Invocation.getter(#getTvShowDetail),
        returnValue: _FakeGetTvShowDetail_0(
          this,
          Invocation.getter(#getTvShowDetail),
        ),
      ) as _i2.GetTvShowDetail);

  @override
  _i3.TvShowDetailState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTvShowDetailState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.TvShowDetailState);

  @override
  _i10.Stream<_i3.TvShowDetailState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i10.Stream<_i3.TvShowDetailState>.empty(),
      ) as _i10.Stream<_i3.TvShowDetailState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i3.TvShowDetailEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i3.TvShowDetailEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i3.TvShowDetailState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i3.TvShowDetailEvent>(
    _i11.EventHandler<E, _i3.TvShowDetailState>? handler, {
    _i11.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i11.Transition<_i3.TvShowDetailEvent, _i3.TvShowDetailState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onChange(_i11.Change<_i3.TvShowDetailState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvShowRecommendationBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRecommendationBloc extends _i1.Mock
    implements _i5.TvShowRecommendationBloc {
  MockTvShowRecommendationBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetTvShowRecommendations get getTvShowRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getTvShowRecommendations),
        returnValue: _FakeGetTvShowRecommendations_2(
          this,
          Invocation.getter(#getTvShowRecommendations),
        ),
      ) as _i4.GetTvShowRecommendations);

  @override
  _i5.TvShowRecommendationState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTvShowRecommendationState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i5.TvShowRecommendationState);

  @override
  _i10.Stream<_i5.TvShowRecommendationState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i10.Stream<_i5.TvShowRecommendationState>.empty(),
      ) as _i10.Stream<_i5.TvShowRecommendationState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i5.TvShowRecommendationEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i5.TvShowRecommendationEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i5.TvShowRecommendationState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i5.TvShowRecommendationEvent>(
    _i11.EventHandler<E, _i5.TvShowRecommendationState>? handler, {
    _i11.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i11.Transition<_i5.TvShowRecommendationEvent,
                  _i5.TvShowRecommendationState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onChange(_i11.Change<_i5.TvShowRecommendationState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvShowCrudBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowCrudBloc extends _i1.Mock implements _i9.TvShowCrudBloc {
  MockTvShowCrudBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SaveWatchlistTvShow get saveWatchlistTvShow => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTvShow),
        returnValue: _FakeSaveWatchlistTvShow_4(
          this,
          Invocation.getter(#saveWatchlistTvShow),
        ),
      ) as _i6.SaveWatchlistTvShow);

  @override
  _i7.RemoveWatchlistTvShow get removeWatchlistTvShow => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTvShow),
        returnValue: _FakeRemoveWatchlistTvShow_5(
          this,
          Invocation.getter(#removeWatchlistTvShow),
        ),
      ) as _i7.RemoveWatchlistTvShow);

  @override
  _i8.GetWatchListTvShowStatus get getWatchListTvShowStatus =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchListTvShowStatus),
        returnValue: _FakeGetWatchListTvShowStatus_6(
          this,
          Invocation.getter(#getWatchListTvShowStatus),
        ),
      ) as _i8.GetWatchListTvShowStatus);

  @override
  _i9.TvShowCrudState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTvShowCrudState_7(
          this,
          Invocation.getter(#state),
        ),
      ) as _i9.TvShowCrudState);

  @override
  _i10.Stream<_i9.TvShowCrudState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i10.Stream<_i9.TvShowCrudState>.empty(),
      ) as _i10.Stream<_i9.TvShowCrudState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void add(_i9.TvShowCrudEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i9.TvShowCrudEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i9.TvShowCrudState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i9.TvShowCrudEvent>(
    _i11.EventHandler<E, _i9.TvShowCrudState>? handler, {
    _i11.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i11.Transition<_i9.TvShowCrudEvent, _i9.TvShowCrudState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  void onChange(_i11.Change<_i9.TvShowCrudState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
