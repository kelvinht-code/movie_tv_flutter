// Mocks generated by Mockito 5.4.4 from annotations
// in movie_tv_level_maximum/test/presentation/pages/tv_show/tv_show_detail_body_page.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i13;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:movie_tv_level_maximum/common/state_enum.dart' as _i9;
import 'package:movie_tv_level_maximum/domain/entities/tv_show/tv_show.dart'
    as _i10;
import 'package:movie_tv_level_maximum/domain/entities/tv_show/tv_show_detail.dart'
    as _i7;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_tv_show_detail.dart'
    as _i2;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_tv_show_recommendations.dart'
    as _i3;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/get_watchlist_tv_show_status.dart'
    as _i4;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/remove_watchlist_tv_show.dart'
    as _i6;
import 'package:movie_tv_level_maximum/domain/use_cases/tv_show/save_watchlist_tv_show.dart'
    as _i5;
import 'package:movie_tv_level_maximum/presentation/provider/tv_show/tv_show_detail_notifier.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvShowDetail_0 extends _i1.SmartFake
    implements _i2.GetTvShowDetail {
  _FakeGetTvShowDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvShowRecommendations_1 extends _i1.SmartFake
    implements _i3.GetTvShowRecommendations {
  _FakeGetTvShowRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListTvShowStatus_2 extends _i1.SmartFake
    implements _i4.GetWatchListTvShowStatus {
  _FakeGetWatchListTvShowStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvShow_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistTvShow {
  _FakeSaveWatchlistTvShow_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvShow_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistTvShow {
  _FakeRemoveWatchlistTvShow_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvShowDetail_5 extends _i1.SmartFake implements _i7.TvShowDetail {
  _FakeTvShowDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvShowDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDetailNotifier extends _i1.Mock
    implements _i8.TvShowDetailNotifier {
  MockTvShowDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvShowDetail get getTvShowDetail => (super.noSuchMethod(
        Invocation.getter(#getTvShowDetail),
        returnValue: _FakeGetTvShowDetail_0(
          this,
          Invocation.getter(#getTvShowDetail),
        ),
      ) as _i2.GetTvShowDetail);

  @override
  _i3.GetTvShowRecommendations get getTvShowRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getTvShowRecommendations),
        returnValue: _FakeGetTvShowRecommendations_1(
          this,
          Invocation.getter(#getTvShowRecommendations),
        ),
      ) as _i3.GetTvShowRecommendations);

  @override
  _i4.GetWatchListTvShowStatus get getWatchListTvShowStatus =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchListTvShowStatus),
        returnValue: _FakeGetWatchListTvShowStatus_2(
          this,
          Invocation.getter(#getWatchListTvShowStatus),
        ),
      ) as _i4.GetWatchListTvShowStatus);

  @override
  _i5.SaveWatchlistTvShow get saveWatchlistTvShow => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTvShow),
        returnValue: _FakeSaveWatchlistTvShow_3(
          this,
          Invocation.getter(#saveWatchlistTvShow),
        ),
      ) as _i5.SaveWatchlistTvShow);

  @override
  _i6.RemoveWatchlistTvShow get removeWatchlistTvShow => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTvShow),
        returnValue: _FakeRemoveWatchlistTvShow_4(
          this,
          Invocation.getter(#removeWatchlistTvShow),
        ),
      ) as _i6.RemoveWatchlistTvShow);

  @override
  _i7.TvShowDetail get tvShow => (super.noSuchMethod(
        Invocation.getter(#tvShow),
        returnValue: _FakeTvShowDetail_5(
          this,
          Invocation.getter(#tvShow),
        ),
      ) as _i7.TvShowDetail);

  @override
  _i9.RequestState get tvShowState => (super.noSuchMethod(
        Invocation.getter(#tvShowState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);

  @override
  List<_i10.TvShow> get tvShowRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvShowRecommendations),
        returnValue: <_i10.TvShow>[],
      ) as List<_i10.TvShow>);

  @override
  _i9.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);

  @override
  bool get isAddedToWatchlistTvShow => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlistTvShow),
        returnValue: false,
      ) as bool);

  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#message),
        ),
      ) as String);

  @override
  String get watchlistTvShowMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistTvShowMessage),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#watchlistTvShowMessage),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Future<void> fetchTvShowDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvShowDetail,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> loadWatchlistTvShowStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistTvShowStatus,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> addWatchlistTvShow(_i7.TvShowDetail? tvShow) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlistTvShow,
          [tvShow],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> removeFromWatchlist(_i7.TvShowDetail? tvShow) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tvShow],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
